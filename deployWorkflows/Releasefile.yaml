# Exported from:        http://LAPTOP-E5FJSD06:5517/
# Release version:      23.1.0-327.423
# Date created:         Mon Mar 27 23:27:30 IST 2023

---
apiVersion: xl-release/v1
kind: Templates
metadata:
  home: Deploy Workflows
spec:
- template: Aws Application Setup
  scheduledStartDate: 2023-03-23T09:00:00+05:30
  dueDate: 2023-03-23T10:00:00+05:30
  phases:
  - phase: Setup Infra and Env
    tasks:
    - name: Create Environment
      type: deploy.CreateCI
      capabilities:
      - remote
      ciID: "Environments/${environment-name}"
      ciType: udm.Environment
      jsonDescriptor: "{}"
    - name: Configure AWS Cloud Connection
      type: deploy.CreateCI
      capabilities:
      - remote
      ciID: "Infrastructure/${awscloud-identifier}"
      ciType: aws.Cloud
      jsonDescriptor: |-
        {
            "accesskey":${accesskey},
            "accessSecret":${accessSecret}
        }
      addToEnvironment: true
      envID: "Environments/${environment-name}"
    - name: Check AWS Connection
      type: deploy.ControlTask
      capabilities:
      - remote
      ciId: "Infrastructure/${awscloud-identifier}"
      taskName: checkConnection
      numberOfContinueRetrials: 0
      pollingInterval: 10
      numberOfPollingTrials: 0
      displayStepLogs: true
      connectionRetries: 10
    color: '#3d6c9e'
  - phase: Setup Application
    tasks:
    - name: Create Application
      type: deploy.CreateCI
      capabilities:
      - remote
      ciID: "Applications/${application-name}"
      ciType: udm.Application
      jsonDescriptor: "{}"
    - name: Create Deployment Package
      type: deploy.CreateCI
      capabilities:
      - remote
      ciID: "Applications/${application-name}/${package-name}"
      ciType: udm.DeploymentPackage
      jsonDescriptor: "{}"
    - name: Create Sample Lambda Deployment from S3
      type: deploy.CreateCI
      capabilities:
      - remote
      ciID: "Applications/${application-name}/${package-name}/sample-lambda"
      ciType: aws.lambda.S3Spec
      jsonDescriptor: |-
        {
            "functionName":"functionName",
            "bucketName":"bucketName",
            "s3Key":"s3Key",
            "region":"us-east-2",
            "runtime":"java8",
            "role":"java8",
            "handler":"sample-function"
        }
    color: '#3d6c9e'
  variables:
  - type: xlrelease.StringVariable
    key: environment-name
    value: aws-env
  - type: xlrelease.StringVariable
    key: awscloud-identifier
    value: aws-cloud
  - type: xlrelease.StringVariable
    key: accessSecret
    value: '"accessSecret"'
  - type: xlrelease.StringVariable
    key: accesskey
    value: '"accesskey"'
  - type: xlrelease.StringVariable
    key: application-name
    value: aws-app
  - type: xlrelease.StringVariable
    key: package-name
    value: "1.0"
  riskProfile: Default risk profile
- template: Azure Application Setup
  scheduledStartDate: 2023-03-23T09:00:00+05:30
  dueDate: 2023-03-23T10:00:00+05:30
  phases:
  - phase: Setup Infra and Env
    tasks:
    - name: Create Environment
      type: deploy.CreateCI
      capabilities:
      - remote
      ciID: "Environments/${environment-name}"
      ciType: udm.Environment
      jsonDescriptor: "{}"
    - name: Configure Azure Connection
      type: deploy.CreateCI
      capabilities:
      - remote
      ciID: "Infrastructure/${azurecloud-identifier}"
      ciType: azure.Cloud
      jsonDescriptor: |-
        {
            "authMethod":"directory-application-and-service-principal",
            "subscriptionId":${subscription-id},
            "tenantId":${tenant-id},
            "clientId":${client-id},
            "clientKey":${client-secret}
        }
      addToEnvironment: true
      envID: "Environments/${environment-name}"
    - name: Check Azure Connection
      type: deploy.ControlTask
      capabilities:
      - remote
      ciId: "Infrastructure/${azurecloud-identifier}"
      taskName: checkConnection
      numberOfContinueRetrials: 0
      pollingInterval: 10
      numberOfPollingTrials: 0
      displayStepLogs: true
      connectionRetries: 10
    color: '#3d6c9e'
  - phase: Setup Application
    tasks:
    - name: Create Application
      type: deploy.CreateCI
      capabilities:
      - remote
      ciID: "Applications/${application-name}"
      ciType: udm.Application
      jsonDescriptor: "{}"
    - name: Create Deployment Package
      type: deploy.CreateCI
      capabilities:
      - remote
      ciID: "Applications/${application-name}/${package-name}"
      ciType: udm.DeploymentPackage
      jsonDescriptor: "{}"
    - name: Create Sample Lambda Deployment from S3
      type: deploy.CreateCI
      capabilities:
      - remote
      ciID: "Applications/${application-name}/${package-name}/sample-resource-group"
      ciType: azure.ResourceGroupSpec
      jsonDescriptor: |-
        {
            "location":${resourcegroup-location},
            "resourceGroupName":${resourcegroup-name}
        }
    color: '#3d6c9e'
  variables:
  - type: xlrelease.StringVariable
    key: environment-name
    value: azure-env
  - type: xlrelease.StringVariable
    key: application-name
    value: azure-app
  - type: xlrelease.StringVariable
    key: package-name
    value: "1.0"
  - type: xlrelease.StringVariable
    key: azurecloud-identifier
    value: azure-cloud
  - type: xlrelease.StringVariable
    key: client-id
    value: '"client-id"'
  - type: xlrelease.StringVariable
    key: client-secret
    value: '"client-secret"'
  - type: xlrelease.StringVariable
    key: subscription-id
    value: '"subscription-id"'
  - type: xlrelease.StringVariable
    key: tenant-id
    value: '"tenant-id"'
  - type: xlrelease.StringVariable
    key: resourcegroup-location
    value: '"East US"'
  - type: xlrelease.StringVariable
    key: resourcegroup-name
    value: '"resourcegroup-name"'
  riskProfile: Default risk profile
- template: Tomcat on Remote SSH Host - Application Setup
  scheduledStartDate: 2023-03-23T09:00:00+05:30
  dueDate: 2023-03-23T10:00:00+05:30
  phases:
  - phase: Setup Infra and Env
    tasks:
    - name: Create Environment
      type: deploy.CreateCI
      capabilities:
      - remote
      ciID: "Environments/${environment-name}"
      ciType: udm.Environment
      jsonDescriptor: "{}"
    - name: Configure Remote Host
      type: deploy.CreateCI
      capabilities:
      - remote
      ciID: "Infrastructure/${host-identifier}"
      ciType: overthere.SshHost
      jsonDescriptor: |-
        {
            "stagingDirectoryPath":"",
            "sudoUsername":${sudo-username},
            "suUsername":"",
            "suPassword":"",
            "os":${os},
            "connectionType":"SUDO",
            "address":${address},
            "port":${port},
            "username":${ssh-username},
            "password":"",
            "privateKeyFile":${ssh-privatekey},
            "passphrase":""
        }
    - name: Check Remote Host Connection
      type: deploy.ControlTask
      capabilities:
      - remote
      ciId: "Infrastructure/${host-identifier}"
      taskName: checkConnection
      numberOfContinueRetrials: 0
      pollingInterval: 10
      numberOfPollingTrials: 0
      displayStepLogs: true
      connectionRetries: 10
    - name: Configure Tomcat Server
      type: deploy.CreateCI
      capabilities:
      - remote
      ciID: "Infrastructure/${host-identifier}/tomcat-server"
      ciType: tomcat.Server
      jsonDescriptor: |-
        {
            "home":"/opt/tomcat",
            "startCommand":"systemctl start tomcat",
            "stopCommand":"systemctl stop tomcat",
            "statusCommand":"systemctl status tomcat",
            "statusCommandExpectedOutput":"active (running)",
            "startWaitTime":"0",
            "stopWaitTime":"0",
            "serverStartupTime":"0",
            "serverShutdownTime":"0",
            "tomcatRunningPort":""
        }
      addToEnvironment: true
      envID: "Environments/${environment-name}"
    - name: Check Tomcat Status
      type: deploy.ControlTask
      capabilities:
      - remote
      ciId: "Infrastructure/${host-identifier}/tomcat-server"
      taskName: status
      numberOfContinueRetrials: 0
      pollingInterval: 10
      numberOfPollingTrials: 0
      displayStepLogs: true
      connectionRetries: 10
    - name: Configure Tomcat VirtualHost
      type: deploy.CreateCI
      capabilities:
      - remote
      ciID: "Infrastructure/${host-identifier}/tomcat-server/virtual-host"
      ciType: tomcat.VirtualHost
      jsonDescriptor: "{}"
      addToEnvironment: true
      envID: "Environments/${environment-name}"
  - phase: Setup Application
    tasks:
    - name: Setup Application
      type: deploy.CreateCI
      capabilities:
      - remote
      ciID: "Applications/${application-name}"
      ciType: udm.Application
      jsonDescriptor: "{}"
    - name: Create Deployment Package
      type: deploy.CreateCI
      capabilities:
      - remote
      ciID: "Applications/${application-name}/1.0"
      ciType: udm.DeploymentPackage
      jsonDescriptor: "{}"
    - name: Create Sample Tomcat DataSourceSpec
      type: deploy.CreateCI
      capabilities:
      - remote
      ciID: "Applications/${application-name}/${package-name}/sample-datasource"
      ciType: tomcat.DataSourceSpec
      jsonDescriptor: |-
        {
            "context":"sample-context",
            "jndiName":"sample-jndiName",
            "driverClassName":"sample-driverClassName",
            "url":"sample-url",
            "username":"sample-username",
            "password":"sample-password"
        }
    color: '#3d6c9e'
  variables:
  - type: xlrelease.StringVariable
    key: environment-name
    value: tomcat-env
  - type: xlrelease.StringVariable
    key: host-identifier
    value: tomcat-host
  - type: xlrelease.StringVariable
    key: address
    value: '"1.2.3.4"'
  - type: xlrelease.StringVariable
    key: os
    value: '"UNIX"'
  - type: xlrelease.StringVariable
    key: port
    value: '"22"'
  - type: xlrelease.StringVariable
    key: ssh-privatekey
    value: '"private-key-path"'
  - type: xlrelease.StringVariable
    key: ssh-username
    value: '"ssh-username"'
  - type: xlrelease.StringVariable
    key: sudo-username
    value: '"sudo-username"'
  - type: xlrelease.StringVariable
    key: application-name
    value: tomcat-app
  - type: xlrelease.StringVariable
    key: package-name
    value: "1.0"
  riskProfile: Default risk profile
- template: Websphere on Remote SSH Host - Application Setup
  scheduledStartDate: 2023-02-14T09:00:00+05:30
  dueDate: 2023-02-14T10:00:00+05:30
  phases:
  - phase: Setup Infra and Env
    tasks:
    - name: Create Environment
      type: deploy.CreateCI
      capabilities:
      - remote
      ciID: "Environments/${environment-name}"
      ciType: udm.Environment
      jsonDescriptor: "{}"
    - name: Configure Remote Host
      type: deploy.CreateCI
      capabilities:
      - remote
      ciID: "Infrastructure/${host-identifier}"
      ciType: overthere.SshHost
      jsonDescriptor: |-
        {
            "stagingDirectoryPath":"",
            "sudoUsername":"sudo-username",
            "suUsername":"",
            "suPassword":"",
            "os":"UNIX",
            "connectionType":"SUDO",
            "address":"1.2.3.4",
            "port":22,
            "username":"ssh-username",
            "password":"",
            "privateKeyFile":123,
            "passphrase":""
        }
    - name: Check Remote Host Connection
      type: deploy.ControlTask
      capabilities:
      - remote
      ciId: "Infrastructure/${host-identifier}"
      taskName: checkConnection
      numberOfContinueRetrials: 0
      pollingInterval: 10
      numberOfPollingTrials: 0
      displayStepLogs: true
      connectionRetries: 10
    - name: Configure Websphere Deployment Manager
      type: deploy.CreateCI
      capabilities:
      - remote
      ciID: "Infrastructure/${host-identifier}/${cell-name}"
      ciType: was.DeploymentManager
      jsonDescriptor: |-
        {
            "wasHome": "/opt/IBM/WebSphere/AppServer-1/profiles/Dmgr01",
            "username": "admin",
            "password": "admin",
            "version": "WAS_90"
        }
      addToEnvironment: true
      envID: "Environments/${environment-name}"
    - name: Configure Websphere Node Agent
      type: deploy.CreateCI
      capabilities:
      - remote
      ciID: "Infrastructure/${host-identifier}/${cell-name}/${node-name}"
      ciType: was.NodeAgent
      jsonDescriptor: "{}"
      addToEnvironment: true
      envID: "Environments/${environment-name}"
    - name: Configure Websphere Server
      type: deploy.CreateCI
      capabilities:
      - remote
      ciID: "Infrastructure/${host-identifier}/${cell-name}/${node-name}/${server-name}"
      ciType: was.ManagedServer
      jsonDescriptor: "{}"
      addToEnvironment: true
      envID: "Environments/${environment-name}"
    color: '#3d6c9e'
  - phase: Setup Application
    tasks:
    - name: Create Application
      type: deploy.CreateCI
      capabilities:
      - remote
      ciID: "Applications/${application-name}"
      ciType: udm.Application
      jsonDescriptor: "{}"
    - name: Create Deployment Package
      type: deploy.CreateCI
      capabilities:
      - remote
      ciID: "Applications/${application-name}/${package-name}"
      ciType: udm.DeploymentPackage
      jsonDescriptor: "{}"
    - name: Create Sample WAS JaasAliasSpec
      type: deploy.CreateCI
      capabilities:
      - remote
      ciID: "Applications/${application-name}/${package-name}/sample-jaasalias"
      ciType: was.JaasAliasSpec
      jsonDescriptor: |-
        {
        "username": "${jaas-username}",
        "password": "${jaas-password}"
        }
    color: '#3d6c9e'
  variables:
  - type: xlrelease.StringVariable
    key: environment-name
    value: was-env
  - type: xlrelease.StringVariable
    key: host-identifier
    value: was-host
  - type: xlrelease.StringVariable
    key: os
    value: UNIX
  - type: xlrelease.StringVariable
    key: address
    value: 1.2.3.4
  - type: xlrelease.StringVariable
    key: port
    value: "22"
  - type: xlrelease.StringVariable
    key: ssh-username
    value: ssh-username
  - type: xlrelease.StringVariable
    key: ssh-password
    value: ssh-password
  - type: xlrelease.StringVariable
    key: sudo-username
    value: sudo-username
  - type: xlrelease.StringVariable
    key: application-name
    value: was-application
  - type: xlrelease.StringVariable
    key: package-name
    value: "1.0"
  - type: xlrelease.StringVariable
    key: cell-name
    value: was-cell-1
  - type: xlrelease.StringVariable
    key: was-home
    value: /opt/IBM/WebSphere/AppServer-1/profiles/Dmgr01
  - type: xlrelease.StringVariable
    key: was-password
    value: admin
  - type: xlrelease.StringVariable
    key: was-username
    value: admin
  - type: xlrelease.StringVariable
    key: was-version
    value: WAS_90
  - type: xlrelease.StringVariable
    key: node-name
    value: was-node-1
  - type: xlrelease.StringVariable
    key: server-name
    value: was-server-1
  - type: xlrelease.StringVariable
    key: jaas-password
    value: admin
  - type: xlrelease.StringVariable
    key: jaas-username
    value: admin
  - type: xlrelease.StringVariable
    key: ssh-privatekey
  riskProfile: Default risk profile
- notifications:
  - notification: TASK_OVERDUE
    priority: High
    subject: "[Release] ${release.title}: ${task.title}"
    body: |-
      The **${task.title}** task in the **${release.title}** release is overdue.

      After the task is completed, please mark it as Completed in Release.
    roles:
    - Watcher
    - Release Admin
    - Task Owner
  - notification: TASK_FLAGGED
    priority: High
    subject: "[Release] ${release.title}: ${task.title}"
    body: |-
      The status of the **${task.title}** task in the **${release.title}** release was changed to **${task.flagStatus}** with the following comment:

      **${release.flagComment}**
    roles:
    - Watcher
    - Release Admin
    - Task Team
  - notification: AUDIT_REPORT_JOB_ABORTED
    priority: Normal
    subject: "[Release] Audit report was aborted"
    body: |-
      **Your audit report was aborted!**

       Please try to generate it again or contact your Release administrator for assistance.
  - notification: MANUAL_TASK_STARTED
    priority: Normal
    subject: "[Release] ${release.title}: ${task.title}"
    body: |-
      The **${task.title}** task in the **${release.title}** release has started and is assigned to you or your team.

      After the task is completed, please mark it as Completed in Release.
    roles:
    - Watcher
    - Task Owner
  - notification: TASK_FAILED
    priority: High
    subject: "[Release] ${release.title}: ${task.title}"
    body: |-
      The **${task.title}** task in the **${release.title}** release has failed.

      Other tasks could still be in progress, but the release will stop after they complete.

      You can retry the task, reassign it to somebody else or abort the release.
    roles:
    - Watcher
    - Task Team
    - Task Owner
  - notification: USER_MENTIONED
    priority: Normal
    subject: "[Release] ${mentionedByFullName} mentioned you on ${release.title}:\
      \ ${task.title}"
    body: "**${mentionedByFullName}** mentioned you on the **${task.title}** task\
      \ in the **${release.title}** release:"
  - notification: COMMENT_ADDED
    priority: Normal
    subject: "[Release] ${release.title}: ${task.title}"
    body: |-
      **${comment.authorFullName}** commented on the **${task.title}** task in the **${release.title}** release:

      ${comment.text}
    roles:
    - Watcher
    - Task Team
    - Task Owner
  - notification: AUDIT_REPORT_JOB_FAILED
    priority: Normal
    subject: "[Release] Audit report has failed"
    body: |-
      **Your audit report has failed!**

       Please try to generate it again or contact your Release administrator for assistance.
  - notification: RELEASE_FAILED
    priority: High
    subject: "[Release] ${release.title}"
    body: |-
      The **${release.title}** release has failed due to a task failure.

      The release is now stopped.

      You can retry the failed task, reassign it to somebody else or abort the release.
    roles:
    - Release Admin
  - notification: TASK_DUE_SOON
    priority: Normal
    subject: "[Release] ${release.title}: ${task.title}"
    body: |-
      The **${task.title}** task in the **${release.title}** release is due in **${task.dueInHours}** hours and **${task.dueInMinutes}** minutes.

      After the task is completed, please mark it as Completed in Release.
    roles:
    - Watcher
    - Release Admin
    - Task Owner
  - notification: ACTIVE_TASK_UNASSIGNED
    priority: Normal
    subject: "[Release] ${release.title}: ${task.title}"
    body: |-
      The **${task.title}** task in the **${release.title}** release is active but not assigned to anyone anymore.

      Please assign the task to a user or a team.
    roles:
    - Watcher
    - Task Team
    - Task Owner
  - notification: RELEASE_FAILING
    priority: High
    subject: "[Release] ${release.title}"
    body: |-
      The **${release.title}** release is failing due to a task failure.

      Other tasks may still be in progress, but the release will stop after they complete.

      You can retry the failed task, reassign it to somebody else or abort the release.
    roles:
    - Release Admin
  - notification: USER_TOKEN_ABOUT_TO_EXPIRE
    priority: Normal
    subject: "[Release] Your personal access token is about to expire"
    body: |-
      Your personal access token "'${token.tokenNote}'" will expire in about ${token.expirationDurationInHours} hours.

       If this token is still needed, visit [Access tokens](${url}#/personal-access-token) to generate an equivalent.
  - notification: RELEASE_FLAGGED
    priority: High
    subject: "[Release] ${release.title}"
    body: |-
      The status of the **${release.title}** release was changed to **${release.flagStatus}** with the following comment:

      **${release.flagComment}**
    roles:
    - Release Admin
  - notification: MANUAL_TASK_STARTED_WITHOUT_OWNER
    priority: Normal
    subject: "[Release] ${release.title}: ${task.title}"
    body: |-
      The **${task.title}** task in the **${release.title}** release has started, but it is not assigned.

      Please assign the task to a user or a team.
    roles:
    - Watcher
    - Release Admin
  - notification: RELEASE_COMPLETED
    priority: Normal
    subject: "[Release] ${release.title}"
    body: "The **${release.title}** release has been completed."
    roles:
    - Release Admin
  - notification: TASK_WAITING_FOR_INPUT
    priority: Normal
    subject: "[Release] ${release.title}: ${task.title}"
    body: |-
      The **${task.title}** task in the **${release.title}** release needs your input.

      Please enter the required information so the release can continue.
    roles:
    - Watcher
    - Task Team
    - Task Owner
  - notification: AUDIT_REPORT_JOB_COMPLETED
    priority: Normal
    subject: "[Release] Report '${report.reportName}' is ready"
    body: |-
      **Your audit report is complete!**

       '${report.reportName}' is ready for download.
  - notification: RELEASE_STARTED
    priority: Normal
    subject: "[Release] ${release.title}"
    body: "The **${release.title}** release has been started."
    bulkSubject: "[Release] Multiple releases started"
    bulkBody: |-
      The following releases have been started:

      ${#releases}
      * [${title}](${url})
      ${/releases}
    roles:
    - Release Admin
  - notification: RELEASE_ABORTED
    priority: Normal
    subject: "[Release] ${release.title}"
    body: "The **${release.title}** release has been aborted."
    bulkSubject: "[Release] Multiple releases aborted"
    bulkBody: |-
      The following releases have been aborted:

      ${#releases}
      * [${title}](${url})
      ${/releases}
    roles:
    - Release Admin
  - notification: ACTIVE_TASK_ASSIGNED
    priority: Normal
    subject: "[Release] ${release.title}: ${task.title}"
    body: "The active task **${task.title}** in the **${release.title}** release is\
      \ now assigned to ${task.ownerFullName}."
    roles:
    - Watcher
    - Task Team
    - Task Owner